// File: Asn06
// Kunal Mukherjee
// CS 210
// Assignment : Vectors
// The program will read a file which contains 20 pair of points. My program will provide a menu to the user allowing her to select one of five options: 1) points closest together 2) points furthest apart 3) triangle with the smallest area, 4) triangle with the largest area 5) exit.

#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#pragma warning(disable:4996)
#define _GNU_SOURCE
#define MAX 20

int    MenuPrint();
double Distance(double x1, double y1, double x2, double y2);
double Area(double a, double b, double c);
double AreaDifferenciator (double pointsarray[20][2], int number_of_points, int largest_or_smallest_area, double *vertex1, double *vertex2, double *vertex3 );
double LineLength(double pointsarray[20][2], int number_of_points,int largest_or_smallest_line,double *point1, double *point2);

int main()
{
   int choice;
    choice = MenuPrint();     
    if (choice == 5)
    {
        return 0;
    }
    else
    {

    }

}

int MenuPrint()
{
    int choice;
    printf("\nPlease choice a option:\n1> points closest together\n2> pointsfurther apart\n3>triangle with the smallest area\n4>triangle with the largest area\n5>exit\n");
    scanf_s("%d", &choice); 
    return choice;
}

double Distance(double x1, double y1, double x2, double y2)
{
    double distance;
    distance = sqrt(pow((x1-x2),2)+pow((y1-y2),2));
    return distance;
}

double Area(double a, double b, double c)
{
    double area, s;
    s = (a+b+c)/2;
    area = sqrt(s*(s-a)*(s-b)*(s-c));
    return area;
}

double LineLength (double pointsarray[20][2], int number_of_points, int largest_or_smallest_line, double *point1, double *point2)
{
     if (largest_or_smallest_line = 2)
          {
                double x1, y1, x2, y2;
                double dist_max;
                double dist;
                int i, j, iMax, jMax;
                iMax = 0;jMax = 1;
                i=0;

                while (i < number_of_points)
                    {
                         x1 = pointsarray[i][0];
                         x2 = pointsarray[i+1][0];
                         y1= pointsarray[i][1];
                         y2 = pointsarray[i+1][1];              
                         dist_max = Distance( x1, y1, x2, y2);       
                              for(i=0;i<19;i++)
                                  {
                                     for(j=i+1;j<20;j++)
                                       {
                                            x1 = pointsarray[i][0];
                                            x2 = pointsarray[i+1][0];
                                            y1= pointsarray[i][1];
                                            y2 = pointsarray[i+1][1]; 
                                            dist = Distance( x1, y1, x2, y2);
                                                if(dist > dist_max)
                                                      { 
                                                         iMax = i;jMax = j;
                                                         dist_max = dist;
                                                       }
                                       }
                                   }
                        printf("Max distance is %f\n", dist_max);
                        printf("Points are %5.2f, %5.2f and %5.2f, %5.2f\n",x1,y1,x2,y2);
                     }
 }

     else if (largest_or_smallest_line = 1)
    {
        double x1, y1, x2, y2;
                double distance_max;
                double dist, distMin;
                int i, j, iMin, jMin;
                iMin = 0;jMin = 1;
                i = 0;

                while (i < number_of_points)
                    {
                         x1 = pointsarray[i][0];
                         x2 = pointsarray[i+1][0];
                         y1= pointsarray[i][1];
                         y2 = pointsarray[i+1][1];              
                         distMin = Distance( x1, y1, x2, y2);       
                              for(i=0;i<19;i++)
                                  {
                                     for(j=i+1;j<20;j++)
                                       {
                                            x1 = pointsarray[i][0];
                                            x2 = pointsarray[i+1][0];
                                            y1= pointsarray[i][1];
                                            y2 = pointsarray[i+1][1]; 
                                            dist = Distance( x1, y1, x2, y2);
                                                if(dist < distMin)
                                                      { 
                                                         iMin = i;jMin = j;
                                                         distMin = dist;
                                                       }
                                       }
                                   }
                        printf("Minimum distance is %f\n", distMin);
                        printf("Points are %5.2f, %5.2f and %5.2f, %5.2f\n",x1,y1,x2,y2);
                     }
}
}


double AreaDifferenciator (double pointsarray[20][2], int number_of_points, int largest_or_smallest_area, double *vertex1, double *vertex2, double *vertex3 )
{
    double distance_a,distance_b,distance_c;
    double x1,y1,x2,y2;    
    double area, area_min, area_max; 
    int i, j, iMax, jMax;
    iMax = 0; jMax = 1;
    i = 0;

    if (largest_or_smallest_area == 3)
       {
           while (i < number_of_points)
                 {
                       x1 = pointsarray[i][0];
                       x2 = pointsarray[i+1][0];
                       y1= pointsarray[i][1];
                       y2 = pointsarray[i+1][1];              
                       distance_a = Distance( x1, y1, x2, y2);
                       i++;
                       x1 = pointsarray[i][0];
                       x2 = pointsarray[i+1][0];
                       y1= pointsarray[i][1];
                       y2 = pointsarray[i+1][1];              
                       distance_b = Distance( x1, y1, x2, y2);
                       i++;
                       x1 = pointsarray[i][0];
                       x2 = pointsarray[i+1][0];
                       y1= pointsarray[i][1];
                       y2 = pointsarray[i+1][1];
                       distance_c = Distance( x1, y1, x2, y2);      
        
                       area_min =  Area(distance_a,distance_b,distance_c); 
                            for(i=0;i<6;i++)
                                {
                                     for(j=i+1;j<7;j++)
                                             {
                                                 area =  Area(distance_a,distance_b,distance_c);
                                                        if(area > area_min)
                                                             {
                                                                iMax = i;jMax = j;
                                                                area_min = area;
                                                             }
                                              }
                                }
                      }    
            
            printf("Minimum area is %f\n", area_min);
            printf("Points are %5.2f, %5.2f and %5.2f, %5.2f\n", x1,y1,x2,y2);
        }

    else if (largest_or_smallest_area == 4)
           {
               while (i < number_of_points)
                     {
                           x1 = pointsarray[i][0];
                           x2 = pointsarray[i+1][0];
                           y1= pointsarray[i][1];
                           y2 = pointsarray[i+1][1];              
                           distance_a = Distance( x1, y1, x2, y2);
                           i++;
                           x1 = pointsarray[i][0];
                           x2 = pointsarray[i+1][0];
                           y1= pointsarray[i][1];
                           y2 = pointsarray[i+1][1];              
                           distance_b = Distance( x1, y1, x2, y2);
                           i++;
                           x1 = pointsarray[i][0];
                           x2 = pointsarray[i+1][0];
                           y1= pointsarray[i][1];
                           y2 = pointsarray[i+1][1];
                           distance_c = Distance( x1, y1, x2, y2);      
        
                           area_max =  Area(distance_a,distance_b,distance_c); 
                                for(i=0;i<6;i++)
                                    {
                                         for(j=i+1;j<7;j++)
                                                 {
                                                     area =  Area(distance_a,distance_b,distance_c);
                                                            if(area < area_max)
                                                                 {
                                                                    iMax = i;jMax = j;
                                                                    area_max = area;
                                                                 }
                                                  }
                                    }
                          }    
            
                printf("Minimum area is %f\n", area_max);
                printf("Points are %5.2f, %5.2f and %5.2f, %5.2f\n", x1,y1,x2,y2);
            }
 }
 
 


