double Area(double a, double b, double c);
double AreaDifferenciator ( double pointsarray[][1], int number_of_points, int largest_or_smallest_area, double vertex1[][2], double vertex2[][2],double vertex3[][2] );

double Area(double distance1, double distance2, double distance3 )

{

    double area, s;

    s = (distance1+distance2+distance3)/2;

    area = sqrt(s*(s-distance1)*(s-distance2)*(s-distance3));

    return area;

}

double AreaDifferenciator (double pointsarray[][1], int number_of_points, int largest_or_smallest_area, double vertex1[][2], double vertex2[][2],double vertex3[][2] )

{

    double distance_a,distance_b,distance_c;

    double x1,y1,x2,y2,x3,y3;       

   if (largest_or_smallest_area == 3)

       {        
                double dist, dist_Min;

                int i,j;                

                int iMin, jMin;

                iMin = 0;

                jMin = 1;

                x3=0, y3=0;

                

                x1 = pointsarray[iMin][0];

                y1= pointsarray[iMin][1];

                x2 = pointsarray[jMin][0];

                y2 = pointsarray[jMin][1]; 



                dist_Min = Distance( x1, y1, x2, y2); 



                for (i = 0; i < 19; i++)

                { 

                    for (j = i + 1; j < 20; j++)

                    {

                        x1 = pointsarray[i][0];

                        y1 = pointsarray[i][1];

                        x2 = pointsarray[j][0];

                        y2 = pointsarray[j][1];

                        dist = Distance( x1, y1, x2, y2);

                        if (dist < dist_Min)

                        {

                            iMin = i;

                            jMin = j;

                            dist_Min = dist;

                        }

                    }

                }

                                    vertex1[0][0] = x1;

                                    vertex1[0][1] = y1;



                dist_Min = Distance( x2, y2, x3, y3); 

                for (i = 0; i < 19; i++)

                { 

                    for (j = i + 1; j < 20; j++)

                    {

                        x1 = pointsarray[i][0];

                        y1 = pointsarray[i][1];

                        x2 = pointsarray[j][0];

                        y2 = pointsarray[j][1];

                        dist = Distance( x2, y2, x3, y3);

                        if (dist < dist_Min)

                        {

                            iMin = i;

                            jMin = j;

                            dist_Min = dist;

                        }

                    }

                }

                                    vertex2[0][0] = x2;

                                    vertex2[0][1] = y2;

                                    vertex3[0][0] = x3;

                                    vertex3[0][1] = y3;

        }
 }
